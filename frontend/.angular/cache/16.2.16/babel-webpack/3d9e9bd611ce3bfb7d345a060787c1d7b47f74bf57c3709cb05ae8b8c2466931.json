{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/products`;\n  }\n  // Get all products\n  getProducts(category) {\n    const url = category ? `${this.apiUrl}?category=${category}` : this.apiUrl;\n    return this.http.get(url);\n  }\n  // Get a single product\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Get featured products\n  getFeaturedProducts() {\n    return this.http.get(`${this.apiUrl}`).pipe(map(products => products.filter(product => product.featured)));\n  }\n  // Create a new product\n  createProduct(productData) {\n    return this.http.post(this.apiUrl, productData);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","ProductService","constructor","http","apiUrl","getProducts","category","url","get","getProduct","id","getFeaturedProducts","pipe","products","filter","product","featured","createProduct","productData","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Monu\\Desktop\\Web Development\\ecom-website\\frontend\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../models/product.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = `${environment.apiUrl}/products`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get all products\r\n  getProducts(category?: string): Observable<Product[]> {\r\n    const url = category ? `${this.apiUrl}?category=${category}` : this.apiUrl;\r\n    return this.http.get<Product[]>(url);\r\n  }\r\n\r\n  // Get a single product\r\n  getProduct(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiUrl}/${id}`);\r\n  }\r\n  \r\n  // Get featured products\r\n  getFeaturedProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiUrl}`).pipe(\r\n      map((products: Product[]) => products.filter(product => product.featured))\r\n    );\r\n  }\r\n\r\n  // Create a new product\r\n  createProduct(productData: Partial<Product>): Observable<Product> {\r\n    return this.http.post<Product>(this.apiUrl, productData);\r\n  }\r\n} "],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,WAAW;EAET;EAExC;EACAC,WAAWA,CAACC,QAAiB;IAC3B,MAAMC,GAAG,GAAGD,QAAQ,GAAG,GAAG,IAAI,CAACF,MAAM,aAAaE,QAAQ,EAAE,GAAG,IAAI,CAACF,MAAM;IAC1E,OAAO,IAAI,CAACD,IAAI,CAACK,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEA;EACAE,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACJ,MAAM,IAAIM,EAAE,EAAE,CAAC;EACvD;EAEA;EACAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,MAAM,EAAE,CAAC,CAACQ,IAAI,CACpDb,GAAG,CAAEc,QAAmB,IAAKA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,QAAQ,CAAC,CAAC,CAC3E;EACH;EAEA;EACAC,aAAaA,CAACC,WAA6B;IACzC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAU,IAAI,CAACf,MAAM,EAAEc,WAAW,CAAC;EAC1D;;;uBA1BWjB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}